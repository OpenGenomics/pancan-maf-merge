cwlVersion: v1.0
class: CommandLineTool

label: Annotate VCF using Cosmic

requirements:
  - class: DockerRequirement
    dockerImageId: opengenomics/annotate_vcf_cosmic

baseCommand:
  - /stornext/snfs2/can/code/jython/jython-2.7.0/bin/jython
  - /hgsc_software/cancer-analysis/halotron/illumina/illumina_v0.0.2/halotron/illumina/annotation/annotate_vcf_cosmic.py

# TODO move to dockerfile
# export JYTHONPATH=/hgsc_software/cancer-analysis/halotron/illumina/illumina_v0.0.2/halotron/site-packages
# export CLASSPATH=/hgsc_software/cancer-analysis/code/javalib/sqlite-jdbc-3.8.11.2/sqlite-jdbc-3.8.11.2.jar:/hgsc_software/cancer-analysis/code/picard-tools-1.129/picard.jar:/hgsc_software/cancer-analysis/code/picard-tools-1.129/picard-lib.jar:/hgsc_software/cancer-analysis/code/picard-tools-1.129/htsjdk-1.129.jar:/hgsc_software/cancer-analysis/code/krcgtk/krcgtk-0.01.jar:$CLASSPATH

# TODO resource requirement?
# -J-Xmx15g

inputs:

  genome_reference:
    type: File
    inputBinding:
      prefix: --reference
    # TODO move reference file to downloadable location and inputs.json example
    # 'reference': '/hgsc_software/cancer-analysis/resources/references/human/hg19/hg19.fa',

  cosmic_reference:
    type: File
    inputBinding:
      prefix: --cosmic
    # TODO move reference file to downloadable location and inputs.json example
    # 'cosmic': '/hgsc_software/cancer-analysis/resources/annotation-databases/cosmic/v71/CosmicCodingMuts.cnt3.vcf',

  vcf:
    type: File
    inputBinding:
      prefix: --input

  valstatus_database:
    type: File
    inputBinding:
      prefix: --valstatus_database
    # TODO move reference file to downloadable location and inputs.json example
    # 'valstatus': '/hgsc_software/cancer-analysis/resources/dbsnp/hg19/146/dbSNP_b146_GRCh37p13.valstatus.db',


outputs:
  output_vcf:
    type: File
    outputBinding:
      glob: output.vcf
